// Generated by CoffeeScript 1.4.0
(function() {
  var compile_coffees, spawn;

  spawn = require('child_process').spawn;

  console.log("compiling coffees");

  compile_coffees = spawn('./compile_coffees.sh');

  compile_coffees.on('exit', function(code) {
    var init_db;
    console.log("cleaning db");
    init_db = spawn('node', ['init_db.js', '-c', '-r 0']);
    return init_db.on('exit', function(code) {
      var init_api_db;
      console.log("init api started");
      init_api_db = spawn('node', ['init_api_db.js'], {
        cwd: 'api'
      });
      return init_api_db.on('exit', function(code) {
        var api;
        console.log("api started on port 8080");
        api = spawn('node', ['app.js'], {
          cwd: 'api'
        });
        return setTimeout(function() {
          var example;
          console.log("running example");
          example = spawn('node', ['app.js'], {
            cwd: 'examples/contador'
          });
          return example.on('exit', function(code) {
            var client, core, reducer;
            console.log("server started on port 3000");
            core = spawn('node', ['app.js']);
            core.stderr.on('data', function(data) {
              return console.log("core error: " + data);
            });
            console.log("reducer started");
            reducer = spawn('node', ['reducer.js']);
            reducer.stderr.on('data', function(data) {
              return console.log("reducer error: " + data);
            });
            console.log("client started on port 8000");
            client = spawn('./start.sh', [], {
              cwd: 'client'
            });
            return client.stderr.on('data', function(data) {
              return console.log("client error: " + data);
            });
          });
        }, 5000);
      });
    });
  });

}).call(this);
