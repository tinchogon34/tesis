// Generated by CoffeeScript 1.6.1
(function() {
  var MongoClient, ObjectID, assert, db_url, doc, i, open, sleep, _i;

  MongoClient = require('mongodb').MongoClient;

  ObjectID = require('mongodb').ObjectID;

  open = require('open');

  assert = require('assert');

  sleep = require('sleep');

  require('./app.js');

  db_url = 'mongodb://127.0.0.1:27017/tesis?maxPoolSize=10';

  doc = {
    data: {
      0: 1,
      1: 1,
      2: 2,
      3: 3
    },
    worker_code: "investigador_map = function (k, v) {\r\n  log(\"inv in\");\r\n  var ms = 1000;\r\n  var started = new Date().getTime();\r\n  while((new Date().getTime() - started) < ms) {\r\n  }\r\n  emit(\"llave\", v*v);\r\n  log(\"inv in out\");\r\n};      ",
    reduce: "function (k, vals) {\r\n  var total = vals.reduce(function(a, b) {\r\n    return parseInt(a) + parseInt(b);\r\n  });\r\n  return total;\r\n};      ",
    map_results: {},
    reduce_results: {},
    slices: {
      0: {
        status: "created",
        data: {
          0: 1,
          1: 1,
          2: 2
        }
      },
      1: {
        status: "created",
        data: {
          3: 3
        }
      }
    },
    current_slice: 0,
    status: "created",
    received_count: 0,
    send_count: 0
  };

  for (i = _i = 1; _i <= 10; i = ++_i) {
    open('http://127.0.0.1:3000');
  }

  sleep.sleep(10);

  MongoClient.connect(db_url, function(err, db) {
    assert.equal(null, err);
    return db.collection('workers', function(err, collection) {
      assert.equal(null, err);
      return collection.remove({}, function(err, count) {
        var _j, _results;
        assert.equal(null, err);
        _results = [];
        for (i = _j = 1; _j <= 1000; i = ++_j) {
          _results.push((doc["_id"] = new ObjectID(), collection.insert(doc, function(err, result) {
            return assert.equal(null, err);
          })));
        }
        return _results;
      });
    });
  });

}).call(this);
